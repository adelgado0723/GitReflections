How did viewing a diff between two versions of a file help you see the bug that was introduced?


Viewing a diff helped me post the bug because it eliminated all of the code
that stayed the same and allowed me to focus on the few lines that were
changed. Once these were isolated, the error stood out at me. I first thought
that I should double check to make sure that there wasn't a variable called
"spacr" in the original code. 

I did not know about the FC and diff commands. Having used git in the past, 
I know that git has a diff function, but did not know that operating systems
have their own built in.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

The reson that I am taking this course is because I taught myself to use git
in a very simple way to trak all of the work that I did for school this past
semester. Having benefited from being able to revert files to previous
versions and from using a remote repository to have my files available
everywhere, I am eager to learn how to better use git so that I can more
easily navigate the change history of files. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google Docs does?

Choosing when to commit allows the programmer to have control over when and
what versions of their program get saved. On the other hand, one must develop
a habit of making regular commits since, otherwise, useful versions could be
lost in between commits.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while
 others, like Google Docs, treat each file separately?

I think that GIt tries to offer the versitility of allowing the user to choose
how their files are grouped together and tracked. The user can take advantage
of this feature by appropriately grouping the files that should get tracked
together.

How can you use the commands git log and git diff to view the history of files?

I can use these commands to view the history of a file by first searching
through the log for the commit that I would like to inspect, and then using 
git diff to compare it with either the previous commit, or any other.


How might using version control make you more confident to make changes that could break something?

Now that I better understand how to navigate through old versions of files,
I feel more confident introducing changes that might break something because
git makes it very easy to track down where the change was introduced.


Now that you have your workspace set up, what do you want to try using Git for?

I want to learn to use git for all my projects: personal, school, work, etc.
It does seen to require some work up front to get over the learning curve,
but, everyone that does seems to think that it was worth it. So, I am excited
to learn more about branching and manging repositories.
